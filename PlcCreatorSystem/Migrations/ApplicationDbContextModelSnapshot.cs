// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlcCreatorSystem_API.Data;

#nullable disable

namespace PlcCreatorSystem_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlcCreatorSystem_API.Models.HMI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identyfier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HMIs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5265),
                            Details = "HMI1 - TEST",
                            IP = "10.101.10.100",
                            Identyfier = "6AV2 124-0UC02-0AX0/17.0.0.0",
                            Name = "HMI1",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5268),
                            Details = "HMI2 - TEST",
                            IP = "10.102.10.100",
                            Identyfier = "6AV2 124-0UC02-0AX0/17.0.0.0",
                            Name = "HMI2",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5270),
                            Details = "HMI3 - TEST, fill database HMI3, and Project3",
                            IP = "10.103.10.100",
                            Identyfier = "6AV2 124-0UC02-0AX0/17.0.0.0",
                            Name = "HMI3",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PlcCreatorSystem_API.Models.PLC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP_X1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP_X2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identyfier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subnet_X1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subnet_X2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PLCs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5070),
                            Details = "PLC1 - This is TEST",
                            IP_X1 = "10.101.10.11",
                            IP_X2 = "10.100.10.10",
                            Identyfier = "6ES7 516-3AN02-0AB0/V2.9",
                            Name = "PLC1",
                            Subnet_X1 = "Network1_PLC1",
                            Subnet_X2 = "Network2_PLC1",
                            UpdatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5116)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5120),
                            Details = "PLC2 - This is TEST",
                            IP_X1 = "10.102.10.21",
                            IP_X2 = "10.100.10.20",
                            Identyfier = "6ES7 516-3AN02-0AB0/V2.9",
                            Name = "PLC2",
                            Subnet_X1 = "Network1_PLC2",
                            Subnet_X2 = "Network2_PLC2",
                            UpdatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5122)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5126),
                            Details = "PLC3 - This is TEST, fill database PLC3, and Project3",
                            IP_X1 = "10.103.10.31",
                            IP_X2 = "10.100.10.30",
                            Identyfier = "6ES7 516-3AN02-0AB0/V2.9",
                            Name = "PLC3",
                            Subnet_X1 = "Network1_PLC3",
                            Subnet_X2 = "Network2_PLC3",
                            UpdatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5128)
                        });
                });

            modelBuilder.Entity("PlcCreatorSystem_API.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HmiID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PlcID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HmiID");

                    b.HasIndex("PlcID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5290),
                            CustomerDetails = "Firma Krzak",
                            HmiID = 3,
                            Name = "Project1",
                            PlcID = 3,
                            Status = 3,
                            UpdatedDate = new DateTime(2025, 9, 18, 10, 3, 37, 240, DateTimeKind.Local).AddTicks(5292)
                        });
                });

            modelBuilder.Entity("PlcCreatorSystem_API.Models.Project", b =>
                {
                    b.HasOne("PlcCreatorSystem_API.Models.HMI", "HMI")
                        .WithMany()
                        .HasForeignKey("HmiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlcCreatorSystem_API.Models.PLC", "PLC")
                        .WithMany()
                        .HasForeignKey("PlcID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HMI");

                    b.Navigation("PLC");
                });
#pragma warning restore 612, 618
        }
    }
}
